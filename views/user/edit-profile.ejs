
</html><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>FitVibe - Edit Profile</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
  <style>
    :root {
      --primary-color: #1a1a1a;
      --secondary-color: #ffd700;
      --accent-color: #e6c200;
      --text-light: #ffffff;
      --text-dark: #333333;
      --background-light: #f9f9f9;
      --card-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      --transition: all 0.3s ease;
    }

    body {
      font-family: 'Arial', sans-serif;
      line-height: 1.6;
      color: var(--text-dark);
      background-color: var(--background-light);
      margin-left: 250px;
    }

    .container {
      padding: 40px 20px;
      max-width: 600px;
      margin: 0 auto;
    }

    h1 {
      font-size: 28px;
      margin-bottom: 20px;
      color: var(--text-dark);
      position: relative;
      display: inline-block;
    }

    h1::after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 3px;
      background: var(--secondary-color);
    }

    .edit-form {
      background: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: var(--card-shadow);
    }

    .edit-form .form-control {
      margin-bottom: 10px;
    }

    .edit-form img {
      width: 100px;
      height: 100px;
      object-fit: cover;
      border-radius: 50%;
      margin-bottom: 10px;
    }

    .edit-form button {
      padding: 10px 20px;
      background: var(--primary-color);
      color: var(--text-light);
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: var(--transition);
    }

    .edit-form button:hover {
      background: var(--secondary-color);
      color: var(--primary-color);
    }

    .error-msg {
      color: red;
      font-size: 13px;
      margin-bottom: 10px;
      display: none;
    }

    .input-error {
      border: 1px solid red;
    }

    @media (max-width: 768px) {
      body { margin-left: 0; }
      .container { padding: 20px; }
    }
  </style>
</head>
<body>
  <%- include('./partials/sidebar') %>

  <div class="container">
    <!-- <% if (messages && messages.error) { %>
  <div class="alert alert-danger">
    <%= messages.error %>
  </div>
<% } %>

    <% if (messages.success) { %>
      <div class="alert alert-success">
        <%= messages.success %>
      </div>
    <% } %> -->

<form id="editForm" class="edit-form" enctype="multipart/form-data" action="/profile/edit" method="POST">
      <img src="/image/profileimage.jpeg" alt="Profile Image" id="profilePreview">
      <input type="file" name="profileImage" accept="image/*" class="form-control" onchange="previewImage(event)">

      <input type="text" name="name" id="nameInput" value="<%= user.name %>" class="form-control" placeholder="Full Name">
      <div class="error-msg" id="nameError"></div>

      <input type="email" name="email" id="emailInput" value="<%= user.email %>" class="form-control" placeholder="Email Address">
      <div class="error-msg" id="emailError"></div>

      <input type="text" name="phone" id="phoneInput" value="<%= user.phone || '' %>" class="form-control" placeholder="Phone Number">
      <div class="error-msg" id="phoneError"></div>

      <button type="submit" class="btn">Save Changes</button>
    </form>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script>
    const originalEmail = '<%= user.email %>';
    const editForm = document.getElementById('editForm');
    const nameInput = document.getElementById('nameInput');
    const emailInput = document.getElementById('emailInput');
    const phoneInput = document.getElementById('phoneInput');
    const nameError = document.getElementById('nameError');
    const emailError = document.getElementById('emailError');
    const phoneError = document.getElementById('phoneError');

    function validateName(name) {
      const regex = /^[a-zA-Z\s]+$/;
      if (!name) {
        nameError.textContent = 'Name is required.';
        return false;
      } else if (!regex.test(name)) {
        nameError.textContent = 'Name can only contain letters and spaces.';
        return false;
      } else if (name.length > 50) {
        nameError.textContent = 'Name cannot exceed 50 characters.';
        return false;
      }
      nameError.textContent = '';
      return true;
    }

    function validateEmail(email) {
      const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!email) {
        emailError.textContent = 'Email is required.';
        return false;
      } else if (!regex.test(email)) {
        emailError.textContent = 'Invalid email format.';
        return false;
      }
      emailError.textContent = '';
      return true;
    }

    function validatePhone(phone) {
      const regex = /^[6-9]\d{9}$/;
      if (phone && !regex.test(phone)) {
        phoneError.textContent = 'Invalid phone number (10 digits, starting with 6-9).';
        return false;
      }
      phoneError.textContent = '';
      return true;
    }

    function toggleError(input, errorMsg, show) {
      errorMsg.style.display = show ? 'block' : 'none';
      input.classList.toggle('input-error', show);
    }

    nameInput.addEventListener('input', () => {
      toggleError(nameInput, nameError, !validateName(nameInput.value));
    });

    emailInput.addEventListener('input', () => {
      toggleError(emailInput, emailError, !validateEmail(emailInput.value));
    });

    phoneInput.addEventListener('input', () => {
      toggleError(phoneInput, phoneError, !validatePhone(phoneInput.value));
    });

    function previewImage(event) {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          document.getElementById('profilePreview').src = e.target.result;
        };
        reader.readAsDataURL(file);
      }
    }

    editForm.addEventListener('submit', async (e) => {
      e.preventDefault();
       console.log("Form Submit triggered ");

      const nameValid = validateName(nameInput.value);
      const emailValid = validateEmail(emailInput.value);
      const phoneValid = validatePhone(phoneInput.value);

      if (!nameValid || !emailValid || !phoneValid) {
        
        return;
      }
      

      const formData = new FormData(editForm);
      const email = formData.get('email');

      if (email !== originalEmail) {
        try {
          const response = await fetch('/profile/send-otp', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email })
          });
          const result = await response.json();
          if (result.success) {
            sessionStorage.setItem('profileFormData', JSON.stringify([...formData]));
            window.location.href = '/profile/verify-otp';
          } else {
            emailError.textContent = result.message || 'Failed to send OTP.';
            toggleError(emailInput, emailError, true);
          }
        } catch (error) {
          emailError.textContent = 'Error sending OTP.';
          toggleError(emailInput, emailError, true);
        }
      } else {
        submitProfileUpdate(formData);
      }
    });

    async function submitProfileUpdate(formData) {
      try {
        const response = await fetch('/profile/edit', {
          method: 'POST',
          body: formData
        });
        const result = await response.json();
        console.log(result); 
        if (result.success) {
          window.location.href = '/user/account';
        } else {
          alert(result.message || 'Failed to update profile.');
        }
      } catch (error) {
        alert('Error updating profile.');
      }
    }
  </script>
</body>
</html>