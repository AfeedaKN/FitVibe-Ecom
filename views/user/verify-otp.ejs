<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OTP Verification</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
  input[type=number]::-webkit-inner-spin-button,
  input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type=number] {
    -moz-appearance: textfield;
  }
</style>

</head>
<body class="bg-gray-100 flex items-center justify-center h-screen">
  <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-md">
    <h2 class="text-2xl font-bold text-center mb-6">OTP Verification</h2>
    <p class="text-center text-gray-600 mb-4">Enter the OTP sent to your email</p>
    
    <form action="/verify-otp" method="POST" class="space-y-4" onsubmit="return validateOTPForm()">
      <div>
        <input
          type="number"
          id="otp"
          name="otp"
          placeholder="Enter OTP"
          class="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
        >
      </div>
      <button
        type="submit"
        class="w-full bg-blue-500 text-white p-3 rounded-lg hover:bg-blue-600 transition"
      >
        Verify OTP
      </button>
    </form>
    
    <div class="mt-6 text-center">
      <p class="text-gray-600">
        Time remaining: <span id="timer" class="font-semibold">00:30</span>
      </p>
      <button
        id="resendBtn"
        disabled
        class="mt-4 text-gray-400 cursor-not-allowed"
        onclick="resendOTP()"
      >
        Resend OTP
      </button>
    </div>
  </div>

  <script>
    let timeLeft = 30;
    let countdown;
    const timerElement = document.getElementById('timer');
    const resendBtn = document.getElementById('resendBtn');

   
    function startCountdown() {
      clearInterval(countdown); 
      countdown = setInterval(() => {
        timeLeft--;
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timerElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

        if (timeLeft <= 0) {
          clearInterval(countdown);
          timerElement.textContent = '00:00';
          resendBtn.disabled = false;
          resendBtn.classList.remove('text-gray-400', 'cursor-not-allowed');
          resendBtn.classList.add('text-blue-500', 'hover:underline');
        }
      }, 1000);
    }

    startCountdown();

    function resendOTP() {
      
      resendBtn.disabled = true;
      resendBtn.classList.add('text-gray-400', 'cursor-not-allowed');
      resendBtn.classList.remove('text-blue-500', 'hover:underline');

      $.ajax({
        type: 'POST',
        url: '/resend-otp',
        success: function (response) {
          if (response.success) {
            Swal.fire({
              icon: 'success',
              title: 'OTP Resent',
              text: response.message || 'OTP has been resent to your email!',
              timer: 1500,
              showConfirmButton: false
            });
          
            timeLeft = 30;
            timerElement.textContent = '00:30';
            startCountdown();
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: response.message || 'Failed to resend OTP. Please try again.'
            });
            
            resendBtn.disabled = false;
            resendBtn.classList.remove('text-gray-400', 'cursor-not-allowed');
            resendBtn.classList.add('text-blue-500', 'hover:underline');
          }
        },
        error: function (xhr) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: xhr.responseJSON?.message || 'An error occurred while resending OTP. Please try again.'
          });
         
          resendBtn.disabled = false;
          resendBtn.classList.remove('text-gray-400', 'cursor-not-allowed');
          resendBtn.classList.add('text-blue-500', 'hover:underline');
        }
      });
    }

    function validateOTPForm() {
      const otpInput = document.getElementById('otp').value;

      $.ajax({
        type: 'POST',
        url: '/verify-otp',
        data: { otp: otpInput },
        success: function (response) {
          if (response.success) {
            Swal.fire({
              icon: 'success',
              title: 'OTP Verified',
              text: response.message || 'OTP verified successfully!',
              timer: 1500,
              showConfirmButton: false
            }).then(() => {
              window.location.href = response.redirectUrl || '/login';
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Invalid OTP',
              text: response.message || 'The OTP you entered is incorrect. Please try again.'
            });
          }
        },
        error: function (xhr) {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: xhr.responseJSON?.message || 'An error occurred while verifying OTP. Please try again.'
          });
        }
      });
      return false;
    }
  </script>
</body>
</html>