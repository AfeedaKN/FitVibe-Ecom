<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>FitVibe - All Products</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      background: #f8fafc;
      color: #1e293b;
      line-height: 1.6;
    }

    .main-container {
      max-width: 1400px;
      margin: 0 auto;
      padding: 2rem 1.5rem;
      display: grid;
      grid-template-columns: 300px 1fr;
      gap: 2rem;
      align-items: start;
    }

    .filter-sidebar {
      background: #ffffff;
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      padding: 1.5rem;
      position: sticky;
      top: 2rem;
      height: fit-content;
    }

    .filter-sidebar h3 {
      font-size: 1.125rem;
      font-weight: 600;
      color: #111827;
      margin-bottom: 1.5rem;
      padding-bottom: 0.75rem;
      border-bottom: 1px solid #e5e7eb;
      letter-spacing: -0.025em;
    }

    .filter-group {
      margin-bottom: 1.5rem;
    }

    .filter-group:last-child {
      margin-bottom: 0;
    }

    .filter-group label {
      display: block;
      font-size: 0.875rem;
      font-weight: 500;
      color: #374151;
      margin-bottom: 0.5rem;
      letter-spacing: -0.025em;
    }

    .search-bar {
      margin-bottom: 1.5rem;
    }

    .search-bar input {
      width: 100%;
      padding: 0.75rem 0.875rem;
      font-size: 0.875rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      outline: none;
      transition: border-color 0.2s ease;
      font-family: 'Inter', sans-serif;
      margin-bottom: 0.75rem;
      background: #ffffff;
    }

    .search-bar input:focus {
      border-color: #3b82f6;
      box-shadow: 0 0 0 1px #3b82f6;
    }

    .search-bar input::placeholder {
      color: #9ca3af;
    }

    .search-buttons {
      display: flex;
      gap: 0.5rem;
    }

    .search-bar button {
      flex: 1;
      padding: 0.625rem 0.75rem;
      font-size: 0.875rem;
      font-weight: 500;
      border-radius: 6px;
      cursor: pointer;
      transition: all 0.2s ease;
      border: 1px solid transparent;
    }

    .search-bar button:first-child {
      background: #3b82f6;
      color: #ffffff;
    }

    .search-bar button:first-child:hover {
      background: #2563eb;
    }

    .search-bar button.clear-btn {
      background: #ffffff;
      color: #6b7280;
      border-color: #d1d5db;
    }

    .search-bar button.clear-btn:hover {
      background: #f9fafb;
      border-color: #9ca3af;
    }

    .filter-group select, .filter-group input {
      width: 100%;
      padding: 0.75rem 0.875rem;
      font-size: 0.875rem;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      outline: none;
      transition: border-color 0.2s ease;
      font-family: 'Inter', sans-serif;
      background: #ffffff;
      color: #374151;
    }

    .filter-group select:focus, .filter-group input:focus {
      border-color: #3b82f6;
      box-shadow: 0 0 0 1px #3b82f6;
    }

    .filter-group select {
      cursor: pointer;
    }

    .filter-group input::placeholder {
      color: #9ca3af;
    }

    .price-range {
      display: flex;
      gap: 0.75rem;
    }

    .price-range input {
      flex: 1;
    }

    .filter-reset {
      margin-top: 1.5rem;
      padding-top: 1.5rem;
      border-top: 1px solid #e5e7eb;
    }

    .filter-reset button {
      width: 100%;
      padding: 0.75rem;
      background: #ffffff;
      color: #6b7280;
      border: 1px solid #d1d5db;
      border-radius: 6px;
      font-size: 0.875rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .filter-reset button:hover {
      background: #f9fafb;
      border-color: #9ca3af;
    }

    .content-area {
      min-height: 100vh;
    }

    .content-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid #e2e8f0;
    }

    .content-header h2 {
      font-size: 2rem;
      font-weight: 700;
      color: #0f172a;
      letter-spacing: -0.025em;
    }

    .results-count {
      font-size: 0.875rem;
      color: #64748b;
      font-weight: 500;
    }

    .products {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 2rem;
      margin-bottom: 3rem;
    }

    .product-card {
      background: #ffffff;
      border: 1px solid #e2e8f0;
      border-radius: 20px;
      padding: 1.5rem;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .product-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      transform: scaleX(0);
      transition: transform 0.3s ease;
    }

    .product-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    .product-card:hover::before {
      transform: scaleX(1);
    }

    .product-card img {
      width: 100%;
      height: 250px;
      object-fit: cover;
      border-radius: 12px;
      margin-bottom: 1rem;
    }

    .product-card h3 {
      font-size: 1.125rem;
      font-weight: 600;
      color: #0f172a;
      margin-bottom: 0.5rem;
      line-height: 1.4;
    }

    .stars {
      display: flex;
      gap: 0.25rem;
      margin-bottom: 0.75rem;
    }

    .stars i {
      color: #fbbf24;
      font-size: 0.875rem;
    }

    .price {
      font-size: 1.25rem;
      font-weight: 700;
      color: #059669;
      margin-bottom: 1rem;
    }

    .product-actions {
      display: flex;
      gap: 0.75rem;
      align-items: center;
    }

    .view-btn {
      flex: 1;
      padding: 0.75rem 1rem;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: #ffffff;
      text-decoration: none;
      border-radius: 12px;
      font-size: 0.875rem;
      font-weight: 500;
      text-align: center;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .view-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 15px -3px rgba(102, 126, 234, 0.4);
      color: #ffffff;
    }

    .wishlist-btn {
      width: 45px;
      height: 45px;
      background: #f8fafc;
      border: 1px solid #e2e8f0;
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: #64748b;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .wishlist-btn:hover {
      background: #ef4444;
      color: #ffffff;
      border-color: #ef4444;
      transform: scale(1.05);
    }

    .wishlist-btn.active {
      background: #ef4444;
      color: #ffffff;
      border-color: #ef4444;
    }

    .pagination {
      display: flex;
      justify-content: center;
      gap: 0.5rem;
      margin-top: 3rem;
    }

    .pagination a, .pagination span {
      padding: 0.75rem 1rem;
      border: 1px solid #e2e8f0;
      border-radius: 12px;
      text-decoration: none;
      color: #64748b;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    .pagination a:hover {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: #ffffff;
      border-color: transparent;
    }

    .pagination .active {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: #ffffff;
      border-color: transparent;
    }

    .pagination .disabled {
      color: #cbd5e1;
      border-color: #f1f5f9;
      pointer-events: none;
    }

    .mobile-filter-toggle {
      position: fixed;
      bottom: 2rem;
      left: 2rem;
      width: 56px;
      height: 56px;
      background: #3b82f6;
      color: #ffffff;
      border: none;
      border-radius: 12px;
      font-size: 1.125rem;
      cursor: pointer;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
      z-index: 1000;
      transition: all 0.2s ease;
      display: none;
      align-items: center;
      justify-content: center;
    }

    .mobile-filter-toggle:hover {
      background: #2563eb;
      transform: translateY(-2px);
      box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);
    }

    .mobile-filter-toggle:active {
      transform: translateY(0);
    }

    @media (max-width: 1024px) {
      .main-container {
        grid-template-columns: 280px 1fr;
        gap: 1.5rem;
        padding: 1.5rem 1rem;
      }

      .filter-sidebar {
        padding: 1.5rem;
      }

      .products {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 1.5rem;
      }
    }

    @media (max-width: 768px) {
      .main-container {
        grid-template-columns: 1fr;
        gap: 1rem;
        padding: 1rem;
      }

      .filter-sidebar {
        position: fixed;
        top: 0;
        left: -100%;
        width: 300px;
        height: 100vh;
        z-index: 1001;
        overflow-y: auto;
        transition: left 0.3s ease;
        border-radius: 0;
      }

      .filter-sidebar.active {
        left: 0;
      }

      .mobile-filter-toggle {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .filter-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
      }

      .filter-overlay.active {
        display: block;
      }

      .content-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
      }

      .content-header h2 {
        font-size: 1.75rem;
      }

      .products {
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.5rem;
      }

      .pagination {
        flex-wrap: wrap;
        gap: 0.25rem;
      }

      .pagination a, .pagination span {
        padding: 0.5rem 0.75rem;
        font-size: 0.875rem;
      }
    }

    @media (max-width: 480px) {
      .main-container {
        padding: 0.5rem;
      }

      .filter-sidebar {
        width: 280px;
        padding: 1rem;
      }

      .content-header h2 {
        font-size: 1.5rem;
      }

      .products {
        grid-template-columns: 1fr;
        gap: 1rem;
      }

      .product-card {
        padding: 1rem;
      }

      .pagination a, .pagination span {
        padding: 0.5rem;
        font-size: 0.75rem;
      }

      .search-buttons {
        flex-direction: column;
      }

      .price-range {
        flex-direction: column;
        gap: 0.5rem;
      }
    }
  </style>
</head>
<body>
  <%- include('./partials/header') %>

  <div class="filter-overlay" id="filterOverlay"></div>

  <button class="mobile-filter-toggle" id="mobileFilterToggle">
    <i class="fas fa-filter"></i>
  </button>

  <div class="main-container">
    <div class="filter-sidebar" id="filterSidebar">
      <h3><i class="fas fa-filter"></i> Filters</h3>
      
      <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Search products..." value="<%= query.search || '' %>">
        <div class="search-buttons">
          <button id="searchBtn"><i class="fas fa-search"></i> Search</button>
          <button id="clearSearchBtn" class="clear-btn"><i class="fas fa-times"></i> Clear</button>
        </div>
      </div>

      <div class="filter-group">
        <label for="sortSelect"><i class="fas fa-sort"></i> Sort By</label>
        <select id="sortSelect">
          <option value="" <%= !query.sort ? 'selected' : '' %>>Default</option>
          <option value="priceAsc" <%= query.sort === 'priceAsc' ? 'selected' : '' %>>Price: Low to High</option>
          <option value="priceDesc" <%= query.sort === 'priceDesc' ? 'selected' : '' %>>Price: High to Low</option>
          <option value="nameAsc" <%= query.sort === 'nameAsc' ? 'selected' : '' %>>A - Z</option>
          <option value="nameDesc" <%= query.sort === 'nameDesc' ? 'selected' : '' %>>Z - A</option>
          <option value="rating" <%= query.sort === 'rating' ? 'selected' : '' %>>Average Ratings</option>
          <option value="newArrivals" <%= query.sort === 'newArrivals' ? 'selected' : '' %>>New Arrivals</option>
        </select>
      </div>

      <div class="filter-group">
        <label for="categoryFilter"><i class="fas fa-tags"></i> Category</label>
        <select id="categoryFilter">
          <option value="" <%= !query.category ? 'selected' : '' %>>All Categories</option>
          <% categories.forEach(category => { %>
            <option value="<%= category._id.toString() %>" <%= query.category === category._id.toString() ? 'selected' : '' %>><%= category.name %></option>
          <% }) %>
        </select>
      </div>

      <div class="filter-group">
        <label><i class="fas fa-dollar-sign"></i> Price Range</label>
        <div class="price-range">
          <input type="number" id="minPrice" placeholder="Min ₹" value="<%= query.minPrice || '' %>" min="0">
          <input type="number" id="maxPrice" placeholder="Max ₹" value="<%= query.maxPrice || '' %>" min="0">
        </div>
      </div>

      <div class="filter-reset">
        <button id="resetFiltersBtn"><i class="fas fa-redo"></i> Reset Filters</button>
      </div>
    </div>

    <div class="content-area">
      <div class="content-header">
        <h2>All Products</h2>
        <div class="results-count">
          <% if (products.length > 0) { %>
            Showing <%= products.length %> products
          <% } else { %>
            No products found
          <% } %>
        </div>
      </div>

      <% if (products.length === 0) { %>
        <div style="text-align: center; padding: 4rem 2rem; color: #64748b;">
          <i class="fas fa-search" style="font-size: 3rem; margin-bottom: 1rem; opacity: 0.5;"></i>
          <h3 style="margin-bottom: 0.5rem;">No products found</h3>
          <p>Try adjusting your filters or search terms</p>
        </div>
      <% } else { %>
        <div class="products">
          <% products.forEach(product => { %>
            <div class="product-card">
              <% if (product.images && product.images.length > 0) { %>
                <img src="<%= product.images[0].url %>" alt="<%= product.name %>" loading="lazy" />
              <% } else { %>
                <img src="/path/to/default-image.jpg" alt="No image" loading="lazy" />
              <% } %>

              <h3><%= product.name %></h3>

              <div class="stars">
                <% for(let i = 0; i < Math.floor(product.ratings?.average || 0); i++) { %>
                  <i class="fas fa-star"></i>
                <% } %>
                <% if ((product.ratings?.average || 0) % 1 !== 0) { %>
                  <i class="fas fa-star-half-alt"></i>
                <% } %>
                <% for(let i = 0; i < 5 - Math.ceil(product.ratings?.average || 0); i++) { %>
                  <i class="far fa-star"></i>
                <% } %>
              </div>

              <% if (product.variants && product.variants.length > 0 && product.variants[0].salePrice !== undefined) { %>
                <p class="price">₹<%= product.variants[0].salePrice.toFixed(2) %></p>
              <% } else { %>
                <p class="price">Price not available</p>
              <% } %>

              <div class="product-actions">
                <a href="/products/<%= product._id %>" class="view-btn">
                  <i class="fas fa-eye"></i>
                  View Details
                </a>
                <button class="wishlist-btn" data-product-id="<%= product._id %>" data-variant-id="<%= product.variants[0]._id %>" title="Add to Wishlist">
                  <i class="far fa-heart"></i>
                </button>
              </div>
            </div>
          <% }) %>
        </div>

        <div class="pagination">
          <% if (currentPage > 1) { %>
            <a href="<%= buildQuery({ page: currentPage - 1 }) %>">
              <i class="fas fa-chevron-left"></i> Previous
            </a>
          <% } else { %>
            <span class="disabled">
              <i class="fas fa-chevron-left"></i> Previous
            </span>
          <% } %>
          
          <% for(let i = 1; i <= totalPages; i++) { %>
            <a href="<%= buildQuery({ page: i }) %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
          <% } %>
          
          <% if (currentPage < totalPages) { %>
            <a href="<%= buildQuery({ page: currentPage + 1 }) %>">
              Next <i class="fas fa-chevron-right"></i>
            </a>
          <% } else { %>
            <span class="disabled">
              Next <i class="fas fa-chevron-right"></i>
            </span>
          <% } %>
        </div>
      <% } %>
    </div>
  </div>

  <%- include('./partials/footer') %>

  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      const wishlistBtns = document.querySelectorAll('.wishlist-btn');
      const searchInput = document.getElementById('searchInput');
      const categoryFilter = document.getElementById('categoryFilter');

      for (const btn of wishlistBtns) {
        const productId = btn.getAttribute('data-product-id');
        try {
          const response = await fetch(`/wishlist/check/${productId}`);
          const result = await response.json();
          if (result.exists) {
            btn.classList.add('active');
            btn.innerHTML = '<i class="fas fa-heart"></i>';
            btn.title = 'Remove from Wishlist';
          }
        } catch (error) {
          console.error('Error checking wishlist status:', error);
        }
      }

      if (categoryFilter.value) {
        const selectedOption = categoryFilter.options[categoryFilter.selectedIndex];
        searchInput.placeholder = selectedOption.text;
      }
    });

    function buildQueryString(params) {
      const currentParams = new URLSearchParams(window.location.search);
      Object.entries(params).forEach(([key, value]) => {
        if (value || value === '') {
          if (value === '') {
            currentParams.delete(key);
          } else {
            currentParams.set(key, value);
          }
        }
      });
      return '/products?' + currentParams.toString();
    }

    const minPriceInput = document.getElementById('minPrice');
    const maxPriceInput = document.getElementById('maxPrice');

    function validatePriceRange() {
      const minPrice = parseFloat(minPriceInput.value);
      const maxPrice = parseFloat(maxPriceInput.value);

      if (minPriceInput.value && (isNaN(minPrice) || minPrice < 0)) {
        Toastify({
          text: 'Minimum price must be a non-negative number',
          duration: 3000,
          gravity: 'top',
          position: 'right',
          backgroundColor: '#dc3545',
          stopOnFocus: true,
        }).showToast();
        minPriceInput.value = '';
        return false;
      }

      if (maxPriceInput.value && (isNaN(maxPrice) || maxPrice < 0)) {
        Toastify({
          text: 'Maximum price must be a non-negative number',
          duration: 3000,
          gravity: 'top',
          position: 'right',
          backgroundColor: '#dc3545',
          stopOnFocus: true,
        }).showToast();
        maxPriceInput.value = '';
        return false;
      }

      if (minPriceInput.value && maxPriceInput.value && minPrice > maxPrice) {
        Toastify({
          text: 'Minimum price cannot be greater than maximum price',
          duration: 3000,
          gravity: 'top',
          position: 'right',
          backgroundColor: '#dc3545',
          stopOnFocus: true,
        }).showToast();
        minPriceInput.value = '';
        maxPriceInput.value = '';
        return false;
      }

      return true;
    }

    document.getElementById('searchBtn').addEventListener('click', () => {
      const search = document.getElementById('searchInput').value;
      window.location.href = buildQueryString({ search, page: 1 });
    });

    document.getElementById('clearSearchBtn').addEventListener('click', () => {
      document.getElementById('searchInput').value = '';
      document.getElementById('sortSelect').value = '';
      document.getElementById('categoryFilter').value = '';
      document.getElementById('minPrice').value = '';
      document.getElementById('maxPrice').value = '';
      document.getElementById('searchInput').placeholder = 'Search products...';
      window.location.href = '/products';
    });

    document.getElementById('sortSelect').addEventListener('change', (e) => {
      window.location.href = buildQueryString({ sort: e.target.value, page: 1 });
    });

    document.getElementById('categoryFilter').addEventListener('change', (e) => {
      const selectedOption = e.target.options[e.target.selectedIndex];
      const categoryName = selectedOption.text;
      const searchInput = document.getElementById('searchInput');
      if (e.target.value) {
        searchInput.placeholder = categoryName;
      } else {
        searchInput.placeholder = 'Search products...';
      }
      window.location.href = buildQueryString({ category: e.target.value, page: 1 });
    });

    minPriceInput.addEventListener('change', () => {
      if (validatePriceRange()) {
        window.location.href = buildQueryString({ minPrice: minPriceInput.value, page: 1 });
      }
    });

    maxPriceInput.addEventListener('change', () => {
      if (validatePriceRange()) {
        window.location.href = buildQueryString({ maxPrice: maxPriceInput.value, page: 1 });
      }
    });

    document.getElementById('resetFiltersBtn').addEventListener('click', () => {
      document.getElementById('searchInput').value = '';
      document.getElementById('sortSelect').value = '';
      document.getElementById('categoryFilter').value = '';
      document.getElementById('minPrice').value = '';
      document.getElementById('maxPrice').value = '';
      document.getElementById('searchInput').placeholder = 'Search products...';
      window.location.href = '/products';
    });

    document.querySelectorAll('.wishlist-btn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        e.preventDefault();
        const productId = btn.getAttribute('data-product-id');
        const variantId = btn.getAttribute('data-variant-id');
        const originalIcon = btn.innerHTML;
        const isActive = btn.classList.contains('active');

        try {
          btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
          btn.disabled = true;

          const endpoint = isActive ? '/wishlist/remove' : '/wishlist/add';
          const response = await fetch(endpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId, variantId }),
          });

          const result = await response.json();

          if (result.success) {
            if (isActive) {
              btn.classList.remove('active');
              btn.innerHTML = '<i class="far fa-heart"></i>';
              btn.title = 'Add to Wishlist';
              Toastify({
                text: 'Removed from wishlist!',
                duration: 3000,
                gravity: 'top',
                position: 'right',
                backgroundColor: '#6366f1',
                stopOnFocus: true,
              }).showToast();
            } else {
              btn.classList.add('active');
              btn.innerHTML = '<i class="fas fa-heart"></i>';
              btn.title = 'Remove from Wishlist';
              Toastify({
                text: 'Added to wishlist!',
                duration: 3000,
                gravity: 'top',
                position: 'right',
                backgroundColor: '#28a745',
                stopOnFocus: true,
              }).showToast();
            }
          } else {
            Toastify({
              text: result.message || 'Failed to update wishlist',
              duration: 3000,
              gravity: 'top',
              position: 'right',
              backgroundColor: '#dc3545',
              stopOnFocus: true,
            }).showToast();
            btn.innerHTML = originalIcon;
          }
        } catch (error) {
          console.error('Error updating wishlist:', error);
          Toastify({
            text: 'Error updating wishlist. Please try again.',
            duration: 3000,
            gravity: 'top',
            position: 'right',
            backgroundColor: '#ffc107',
            stopOnFocus: true,
          }).showToast();
          btn.innerHTML = originalIcon;
        } finally {
          btn.disabled = false;
        }
      });
    });

    const mobileFilterToggle = document.getElementById('mobileFilterToggle');
    const filterSidebar = document.getElementById('filterSidebar');
    const filterOverlay = document.getElementById('filterOverlay');

    function toggleMobileFilter() {
      filterSidebar.classList.toggle('active');
      filterOverlay.classList.toggle('active');
      document.body.style.overflow = filterSidebar.classList.contains('active') ? 'hidden' : '';
    }

    function closeMobileFilter() {
      filterSidebar.classList.remove('active');
      filterOverlay.classList.remove('active');
      document.body.style.overflow = '';
    }

    mobileFilterToggle.addEventListener('click', toggleMobileFilter);
    filterOverlay.addEventListener('click', closeMobileFilter);

    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && filterSidebar.classList.contains('active')) {
        closeMobileFilter();
      }
    });

    window.addEventListener('resize', () => {
      if (window.innerWidth > 768) {
        closeMobileFilter();
      }
    });
  </script>
</body>
</html>