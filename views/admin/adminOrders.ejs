<%- include('./partials/header', { pageTitle: 'Orders' }) %>

<%- include('./partials/sidebar', { page: 'orders' }) %>

<div class="main-content">
    <!-- Top Header -->
    <header class="top-header">
        <div class="header-content">
            <div class="header-left">
                <button class="sidebar-toggle" onclick="toggleSidebar()">
                    <i class="fas fa-bars"></i>
                </button>
                <div>
                    <h1 class="page-title">Orders</h1>
                    <div class="breadcrumbs">
                        <a href="/admin/dashboard">Dashboard</a>
                        <span class="breadcrumb-separator">/</span>
                        <span>Orders</span>
                    </div>
                </div>
            </div>
            <div class="header-right">
                <div class="admin-profile">
                    <div class="admin-avatar">
                        A
                    </div>
                    <div class="admin-info">
                        <div class="admin-name">Admin</div>
                        <div class="admin-role">Administrator</div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Content Area -->
    <div class="content-area">
        <!-- Alert Messages -->
        <% if (error_msg && error_msg.length > 0) { %>
            <div class="alert alert-danger alert-dismissible fade show alert-modern" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i>
                <% error_msg.forEach(function(msg) { %>
                    <div><%= msg %></div>
                <% }) %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        <% } %>

        <% if (success_msg && success_msg.length > 0) { %>
            <div class="alert alert-success alert-dismissible fade show alert-modern" role="alert">
                <i class="fas fa-check-circle me-2"></i>
                <% success_msg.forEach(function(msg) { %>
                    <div><%= msg %></div>
                <% }) %>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        <% } %>

        <!-- Stats Overview -->
        <div class="stats-overview">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">
                        <%= typeof allOrders !== 'undefined' ? allOrders.length : 0 %>
                    </div>
                    <div class="stat-label">Total Orders</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">
                        <% if (typeof allOrders !== 'undefined') { %>
                            <%= allOrders.filter(o => o.orderStatus === 'pending').length %>
                        <% } else { %>
                            <%= orders ? orders.filter(o => o.orderStatus === 'pending').length : 0 %>
                        <% } %>
                    </div>
                    <div class="stat-label">Pending</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-truck"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">
                        <% if (typeof allOrders !== 'undefined') { %>
                            <%= allOrders.filter(o => o.orderStatus === 'shipped').length %>
                        <% } else { %>
                            <%= orders ? orders.filter(o => o.orderStatus === 'shipped').length : 0 %>
                        <% } %>
                    </div>
                    <div class="stat-label">Shipped</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fas fa-check-circle"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number">
                        <% if (typeof allOrders !== 'undefined') { %>
                            <%= allOrders.filter(o => o.orderStatus === 'delivered').length %>
                        <% } else { %>
                            <%= orders ? orders.filter(o => o.orderStatus === 'delivered').length : 0 %>
                        <% } %>
                    </div>
                    <div class="stat-label">Delivered</div>
                </div>
            </div>
        </div>

        <!-- Filters and Search -->
        <div class="filter-card">
            <div class="filter-header">
                <h3 class="filter-title">
                    <i class="fas fa-filter"></i>
                    Filters & Search
                </h3>
            </div>
            <div class="filter-body">
                <form action="/admin/orders" method="GET" class="filter-form">
                    <div class="filter-row">
                        <div class="filter-group">
                            <label class="filter-label">Search Orders</label>
                            <div class="search-input-wrapper">
                                <input type="text" 
                                       name="search" 
                                       class="search-input" 
                                       placeholder="Search by order ID, customer name, email..." 
                                       value="<%= query.search || '' %>">
                                <i class="fas fa-search search-icon"></i>
                            </div>
                        </div>
                        <div class="filter-group">
                            <label class="filter-label">Status</label>
                            <select name="status" class="filter-select">
                                <option value="">All Statuses</option>
                                <option value="pending" <%= query.status === 'pending' ? 'selected' : '' %>>Pending</option>
                                <option value="processing" <%= query.status === 'processing' ? 'selected' : '' %>>Processing</option>
                                <option value="shipped" <%= query.status === 'shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="out for delivery" <%= query.status === 'out for delivery' ? 'selected' : '' %>>Out for Delivery</option>
                                <option value="delivered" <%= query.status === 'delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="cancelled" <%= query.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                                <option value="return pending" <%= query.status === 'return pending' ? 'selected' : '' %>>Return Pending</option>
                                <option value="returned" <%= query.status === 'returned' ? 'selected' : '' %>>Returned</option>
                                <option value="payment-failed" <%= query.status === 'payment-failed' ? 'selected' : '' %>>Payment Failed</option>
                            </select>
                        </div>
                        <div class="filter-group">
                            <label class="filter-label">Sort By</label>
                            <select name="sort" class="filter-select">
                                <option value="-orderDate" <%= query.sort === '-orderDate' ? 'selected' : '' %>>Newest First</option>
                                <option value="orderDate" <%= query.sort === 'orderDate' ? 'selected' : '' %>>Oldest First</option>
                                <option value="finalAmount" <%= query.sort === 'finalAmount' ? 'selected' : '' %>>Amount: Low to High</option>
                                <option value="-finalAmount" <%= query.sort === '-finalAmount' ? 'selected' : '' %>>Amount: High to Low</option>
                                <option value="orderStatus" <%= query.sort === 'orderStatus' ? 'selected' : '' %>>Status A-Z</option>
                            </select>
                        </div>
                    </div>
                    <div class="filter-actions">
                        <button type="submit" class="btn-primary">
                            <i class="fas fa-search"></i>
                            Apply Filters
                        </button>
                        <a href="/admin/orders" class="btn-secondary">
                            <i class="fas fa-times"></i>
                            Clear All
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <!-- Orders Table -->
        <% if (orders && orders.length > 0) { %>
            <div class="orders-table-card">
                <div class="table-header">
                    <h3 class="table-title">
                        <i class="fas fa-list"></i>
                        Orders List
                    </h3>
                </div>
                <div class="table-container">
                    <table class="orders-table">
                        <thead>
                            <tr>
                                <th>
                                    <div class="th-content">
                                        <span>Order ID</span>
                                        <i class="fas fa-sort"></i>
                                    </div>
                                </th>
                                <th>
                                    <div class="th-content">
                                        <span>Date & Time</span>
                                        <i class="fas fa-sort"></i>
                                    </div>
                                </th>
                                <th>Customer</th>
                                <th>Status</th>
                                <th>Payment</th>
                                <th>
                                    <div class="th-content">
                                        <span>Total Amount</span>
                                        <i class="fas fa-sort"></i>
                                    </div>
                                </th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orders.forEach(order => { %>
                                <tr class="order-row" data-href="/admin/order/<%= order._id %>">
                                    <td>
                                        <div class="order-id">#<%= order.orderID %></div>
                                    </td>
                                    <td>
                                        <div class="order-date">
                                            <%= order.orderDate.toLocaleDateString('en-IN', { 
                                                year: 'numeric', 
                                                month: 'short', 
                                                day: 'numeric' 
                                            }) %>
                                        </div>
                                        <div class="order-time">
                                            <%= order.orderDate.toLocaleTimeString('en-IN', { 
                                                hour: '2-digit', 
                                                minute: '2-digit' 
                                            }) %>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="customer-info">
                                            <div class="customer-avatar">
                                                <%= order.user.name.charAt(0).toUpperCase() %>
                                            </div>
                                            <div class="customer-details">
                                                <div class="customer-name"><%= order.user.name %></div>
                                                <div class="customer-email"><%= order.user.email %></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="status-badge status-<%= order.orderStatus.toLowerCase().replace(/\s+/g, '-') %>">
                                            <i class="fas fa-circle"></i>
                                            <%= order.orderStatus %>
                                        </span>
                                        <% if (order.isLocked) { %>
                                            <div class="locked-indicator">
                                                <i class="fas fa-lock"></i>
                                                <span>Locked</span>
                                            </div>
                                        <% } %>
                                    </td>
                                    <td>
                                        <div class="payment-info">
                                            <div class="payment-method"><%= order.paymentMethod %></div>
                                            <span class="status-badge status-<%= order.paymentStatus.toLowerCase().replace(/\s+/g, '-') %>">
                                                <i class="fas fa-circle"></i>
                                                <%= order.paymentStatus %>
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="order-amount">₹<%= order.finalAmount.toFixed(2) %></div>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <button class="action-btn view-btn" 
                                                    onclick="window.location.href='/admin/order/<%= order._id %>'"
                                                    title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </button>

                                            <% if (order.orderStatus.toLowerCase() === 'return pending') { %>
                                                <button class="action-btn approve-btn"
                                                        onclick="confirmReturnApprove('<%= order._id %>')"
                                                        title="Approve Return">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                                <button class="action-btn reject-btn"
                                                        onclick="confirmReturnReject('<%= order._id %>')"
                                                        title="Reject Return">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            <% } else { %>
                                                <% 
                                                const isOnlinePaymentPendingOrFailed = (order.paymentMethod && 
                                                  (order.paymentMethod.toLowerCase() === 'online' || order.paymentMethod === 'Online') && 
                                                  (order.paymentStatus === 'pending' || order.paymentStatus === 'failed'));
                                                
                                                const canUpdateStatus = !['cancelled', 'returned', 'delivered', 'payment-failed'].includes(order.orderStatus.toLowerCase()) && 
                                                  !order.isLocked && 
                                                  !isOnlinePaymentPendingOrFailed;
                                                %>
                                                
                                                <% if (canUpdateStatus) { %>
                                                    <button class="action-btn edit-btn"
                                                            data-order-id="<%= order._id %>"
                                                            data-bs-toggle="modal" 
                                                            data-bs-target="#updateStatusModal"
                                                            title="Update Status">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                <% } else if (order.isLocked || order.orderStatus === 'payment-failed' || isOnlinePaymentPendingOrFailed) { %>
                                                    <button class="action-btn locked-btn"
                                                            onclick="showLockedOrderMessage('<%= order.orderStatus %>', '<%= order.paymentStatus %>', <%= order.isLocked || false %>)"
                                                            title="Cannot Edit - Locked">
                                                        <i class="fas fa-lock"></i>
                                                    </button>
                                                <% } %>
                                            <% } %>
                                        </div>

                                        <!-- Hidden forms for return actions -->
                                        <form id="returnApproveForm-<%= order._id %>" 
                                              action="/admin/order/return-approve/<%= order._id %>" 
                                              method="POST" 
                                              style="display: none;">
                                        </form>
                                        <form id="returnRejectForm-<%= order._id %>" 
                                              action="/admin/order/return-reject/<%= order._id %>" 
                                              method="POST" 
                                              style="display: none;">
                                        </form>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
                <div class="pagination-container">
                    <nav class="pagination-nav">
                        <ul class="pagination">
                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" 
                                       href="/admin/orders?page=<%= i %><%= query.search ? '&search=' + encodeURIComponent(query.search) : '' %><%= query.status ? '&status=' + encodeURIComponent(query.status) : '' %><%= query.sort ? '&sort=' + encodeURIComponent(query.sort) : '' %>">
                                        <%= i %>
                                    </a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>
                </div>
            <% } %>
        <% } else { %>
            <!-- Empty State -->
            <div class="empty-state-card">
                <div class="empty-state-content">
                    <div class="empty-state-icon">
                        <i class="fas fa-shopping-cart"></i>
                    </div>
                    <h3 class="empty-state-title">No Orders Found</h3>
                    <p class="empty-state-text">
                        <% if (query.search || query.status) { %>
                            No orders match your current search criteria. Try adjusting your filters.
                        <% } else { %>
                            Orders will appear here once customers start placing them.
                        <% } %>
                    </p>
                    <% if (query.search || query.status) { %>
                        <a href="/admin/orders" class="btn-secondary">
                            <i class="fas fa-times"></i>
                            Clear Filters
                        </a>
                    <% } %>
                </div>
            </div>
        <% } %>
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1" aria-labelledby="updateStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateStatusModalLabel">
                    <i class="fas fa-edit"></i>
                    Update Order Status
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="updateStatusForm" action="/admin/order/status" method="POST">
                <input type="hidden" name="orderId" id="statusOrderId">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="orderStatus" class="form-label">New Status</label>
                        <select class="form-select" id="orderStatus" name="status" required>
                            <option value="pending">Pending</option>
                            <option value="processing">Processing</option>
                            <option value="shipped">Shipped</option>
                            <option value="out for delivery">Out for Delivery</option>
                            <option value="delivered">Delivered</option>
                            <option value="cancelled">Cancelled</option>
                        </select>
                    </div>
                    <div class="form-group" id="cancelReasonDiv" style="display: none;">
                        <label for="cancelReason" class="form-label">Cancellation Reason</label>
                        <textarea class="form-textarea" 
                                  id="cancelReason" 
                                  name="reason" 
                                  rows="3" 
                                  maxlength="500"
                                  placeholder="Please provide a reason for cancellation..."></textarea>
                        <div class="form-help">Optional - helps improve customer experience</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times"></i>
                        Cancel
                    </button>
                    <button type="submit" class="btn-primary">
                        <i class="fas fa-save"></i>
                        Update Status
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    /* Modern Purple Theme Styles for Orders Page */
    
    /* Stats Overview */
    .stats-overview {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: #ffffff;
        border: 1px solid #e2e8f0;
        border-radius: 16px;
        padding: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .stat-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
    }

    .stat-icon {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #ffffff;
        font-size: 1.25rem;
        flex-shrink: 0;
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    .stat-content {
        flex: 1;
    }

    .stat-number {
        font-size: 1.75rem;
        font-weight: 700;
        color: #0f172a;
        line-height: 1.2;
        font-family: 'Inter', sans-serif;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #64748b;
        font-weight: 500;
        margin-top: 0.25rem;
    }

    /* Filter Card */
    .filter-card {
        background: #ffffff;
        border: 1px solid #e2e8f0;
        border-radius: 16px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .filter-header {
        padding: 1.5rem 2rem 0;
        border-bottom: 1px solid #e2e8f0;
    }

    .filter-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #0f172a;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .filter-title i {
        color: #667eea;
    }

    .filter-body {
        padding: 2rem;
    }

    .filter-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .filter-row {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr;
        gap: 1.5rem;
    }

    .filter-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .filter-label {
        font-size: 0.875rem;
        font-weight: 600;
        color: #374151;
    }

    .search-input-wrapper {
        position: relative;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.5rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 0.875rem;
        transition: all 0.3s ease;
        background: #ffffff;
    }

    .search-input:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-2px);
    }

    .search-icon {
        position: absolute;
        left: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        color: #94a3b8;
        font-size: 0.875rem;
    }

    .filter-select {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 0.875rem;
        background: #ffffff;
        transition: all 0.3s ease;
    }

    .filter-select:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-2px);
    }

    .filter-actions {
        display: flex;
        gap: 1rem;
        justify-content: flex-start;
    }

    /* Buttons */
    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: #ffffff;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-size: 0.875rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
        color: #ffffff;
    }

    .btn-secondary {
        background: transparent;
        color: #64748b;
        border: 2px solid #e2e8f0;
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-size: 0.875rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
    }

    .btn-secondary:hover {
        background: #f8fafc;
        border-color: #cbd5e1;
        color: #475569;
        transform: translateY(-2px);
    }

    /* Orders Table */
    .orders-table-card {
        background: #ffffff;
        border: 1px solid #e2e8f0;
        border-radius: 16px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .table-header {
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #e2e8f0;
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
    }

    .table-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #0f172a;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .table-title i {
        color: #667eea;
    }

    .table-container {
        overflow-x: auto;
    }

    .orders-table {
        width: 100%;
        border-collapse: collapse;
    }

    .orders-table th {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
        padding: 1rem 1.5rem;
        text-align: left;
        font-weight: 600;
        font-size: 0.875rem;
        color: #374151;
        border-bottom: 1px solid #e2e8f0;
    }

    .th-content {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .th-content i {
        color: #94a3b8;
        font-size: 0.75rem;
    }

    .orders-table td {
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #f1f5f9;
        font-size: 0.875rem;
    }

    .order-row {
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .order-row:hover {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
    }

    .order-id {
        font-weight: 600;
        color: #667eea;
        font-family: 'Inter', sans-serif;
    }

    .order-date {
        font-weight: 500;
        color: #0f172a;
    }

    .order-time {
        font-size: 0.75rem;
        color: #64748b;
        margin-top: 0.25rem;
    }

    .customer-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .customer-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #ffffff;
        font-weight: 600;
        font-size: 0.75rem;
    }

    .customer-name {
        font-weight: 500;
        color: #0f172a;
    }

    .customer-email {
        font-size: 0.75rem;
        color: #64748b;
        margin-top: 0.125rem;
    }

    .payment-info {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .payment-method {
        font-size: 0.75rem;
        color: #64748b;
        font-weight: 500;
    }

    .locked-indicator {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.75rem;
        color: #dc2626;
        margin-top: 0.25rem;
    }

    .order-amount {
        font-weight: 600;
        color: #0f172a;
        font-family: 'Inter', sans-serif;
    }

    /* Status Badges */
    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        padding: 0.375rem 0.75rem;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 500;
        text-transform: capitalize;
    }

    .status-badge i {
        font-size: 0.5rem;
    }

    .status-pending {
        background: rgba(251, 191, 36, 0.1);
        color: #d97706;
        border: 1px solid rgba(251, 191, 36, 0.2);
    }

    .status-processing {
        background: rgba(59, 130, 246, 0.1);
        color: #2563eb;
        border: 1px solid rgba(59, 130, 246, 0.2);
    }

    .status-shipped {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
        border: 1px solid rgba(102, 126, 234, 0.2);
    }

    .status-out-for-delivery {
        background: rgba(139, 92, 246, 0.1);
        color: #8b5cf6;
        border: 1px solid rgba(139, 92, 246, 0.2);
    }

    .status-delivered {
        background: rgba(16, 185, 129, 0.1);
        color: #059669;
        border: 1px solid rgba(16, 185, 129, 0.2);
    }

    .status-cancelled {
        background: rgba(239, 68, 68, 0.1);
        color: #dc2626;
        border: 1px solid rgba(239, 68, 68, 0.2);
    }

    .status-return-pending {
        background: rgba(156, 163, 175, 0.1);
        color: #6b7280;
        border: 1px solid rgba(156, 163, 175, 0.2);
    }

    .status-returned {
        background: rgba(107, 114, 128, 0.1);
        color: #4b5563;
        border: 1px solid rgba(107, 114, 128, 0.2);
    }

    .status-payment-failed {
        background: rgba(239, 68, 68, 0.1);
        color: #dc2626;
        border: 1px solid rgba(239, 68, 68, 0.2);
    }

    .status-failed {
        background: rgba(239, 68, 68, 0.1);
        color: #dc2626;
        border: 1px solid rgba(239, 68, 68, 0.2);
    }

    .status-completed {
        background: rgba(16, 185, 129, 0.1);
        color: #059669;
        border: 1px solid rgba(16, 185, 129, 0.2);
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .action-btn {
        width: 32px;
        height: 32px;
        border-radius: 8px;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.75rem;
    }

    .view-btn {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
    }

    .view-btn:hover {
        background: rgba(102, 126, 234, 0.2);
        transform: translateY(-2px);
    }

    .edit-btn {
        background: rgba(59, 130, 246, 0.1);
        color: #2563eb;
    }

    .edit-btn:hover {
        background: rgba(59, 130, 246, 0.2);
        transform: translateY(-2px);
    }

    .locked-btn {
        background: rgba(239, 68, 68, 0.1);
        color: #dc2626;
        cursor: not-allowed;
    }

    .locked-btn:hover {
        background: rgba(239, 68, 68, 0.15);
    }

    .approve-btn {
        background: rgba(16, 185, 129, 0.1);
        color: #059669;
    }

    .approve-btn:hover {
        background: rgba(16, 185, 129, 0.2);
        transform: translateY(-2px);
    }

    .reject-btn {
        background: rgba(239, 68, 68, 0.1);
        color: #dc2626;
    }

    .reject-btn:hover {
        background: rgba(239, 68, 68, 0.2);
        transform: translateY(-2px);
    }

    /* Pagination */
    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 2rem;
    }

    .pagination {
        display: flex;
        gap: 0.5rem;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .page-item {
        margin: 0;
    }

    .page-link {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        color: #64748b;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .page-link:hover {
        border-color: #667eea;
        color: #667eea;
        transform: translateY(-2px);
    }

    .page-item.active .page-link {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-color: #667eea;
        color: #ffffff;
        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
    }

    /* Empty State */
    .empty-state-card {
        background: #ffffff;
        border: 1px solid #e2e8f0;
        border-radius: 16px;
        padding: 4rem 2rem;
        text-align: center;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .empty-state-icon {
        font-size: 4rem;
        color: #cbd5e1;
        margin-bottom: 1.5rem;
    }

    .empty-state-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.5rem;
    }

    .empty-state-text {
        color: #64748b;
        margin-bottom: 2rem;
    }

    /* Modal Styles */
    .modal-content {
        border: none;
        border-radius: 16px;
        box-shadow: 0 20px 40px -12px rgba(0, 0, 0, 0.25);
    }

    .modal-header {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
        border-bottom: 1px solid #e2e8f0;
        border-radius: 16px 16px 0 0;
        padding: 1.5rem 2rem;
    }

    .modal-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #0f172a;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .modal-title i {
        color: #667eea;
    }

    .modal-body {
        padding: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        font-size: 0.875rem;
        font-weight: 600;
        color: #374151;
        margin-bottom: 0.5rem;
    }

    .form-select {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 0.875rem;
        background: #ffffff;
        transition: all 0.3s ease;
    }

    .form-select:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .form-textarea {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 0.875rem;
        background: #ffffff;
        transition: all 0.3s ease;
        resize: vertical;
        min-height: 80px;
    }

    .form-textarea:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .form-help {
        font-size: 0.75rem;
        color: #64748b;
        margin-top: 0.5rem;
    }

    .modal-footer {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
        border-top: 1px solid #e2e8f0;
        border-radius: 0 0 16px 16px;
        padding: 1.5rem 2rem;
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
    }

    /* Alert Styles */
    .alert-modern {
        border: none;
        border-radius: 12px;
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .alert-success {
        background: rgba(16, 185, 129, 0.1);
        color: #059669;
        border-left: 4px solid #10b981;
    }

    .alert-danger {
        background: rgba(239, 68, 68, 0.1);
        color: #dc2626;
        border-left: 4px solid #ef4444;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .stats-overview {
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        }

        .filter-row {
            grid-template-columns: 1fr;
        }

        .filter-actions {
            flex-direction: column;
        }

        .orders-table {
            font-size: 0.75rem;
        }

        .customer-info {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }

        .action-buttons {
            flex-direction: column;
            gap: 0.25rem;
        }

        .action-btn {
            width: 100%;
            height: 28px;
        }
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Toast configuration
    const Toast = Swal.mixin({
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
        didOpen: (toast) => {
            toast.addEventListener('mouseenter', Swal.stopTimer);
            toast.addEventListener('mouseleave', Swal.resumeTimer);
        }
    });

    // Order Management Scripts
    document.addEventListener('DOMContentLoaded', function() {
        // Populate status modal
        document.querySelectorAll('[data-order-id]').forEach(btn => {
            btn.addEventListener('click', () => {
                document.getElementById('statusOrderId').value = btn.dataset.orderId;
            });
        });

        // Toggle cancel reason field
        document.getElementById('orderStatus').addEventListener('change', (e) => {
            const cancelReasonDiv = document.getElementById('cancelReasonDiv');
            cancelReasonDiv.style.display = e.target.value === 'cancelled' ? 'block' : 'none';
        });

        // Handle status update with modern toast messages
        document.getElementById('updateStatusForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const submitBtn = e.target.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
            submitBtn.disabled = true;
            
            try {
                const formData = new FormData(e.target);
                const response = await fetch(e.target.action, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(Object.fromEntries(formData))
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Show success toast
                    Toast.fire({
                        icon: 'success',
                        title: 'Order status updated successfully!'
                    });
                    
                    // Close modal and reload
                    const modal = bootstrap.Modal.getInstance(document.getElementById('updateStatusModal'));
                    modal.hide();
                    setTimeout(() => window.location.reload(), 1000);
                } else {
                    // Show error toast instead of alert
                    Toast.fire({
                        icon: 'error',
                        title: result.message || 'Failed to update status',
                        timer: 4000
                    });
                }
            } catch (error) {
                // Show error toast instead of alert
                Toast.fire({
                    icon: 'error',
                    title: 'Error updating status',
                    timer: 4000
                });
            } finally {
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });
    });

    // Show locked order message with toast
    function showLockedOrderMessage(orderStatus, paymentStatus, isLocked) {
        let message = '';
        let icon = 'warning';
        
        if (isLocked || orderStatus === 'payment-failed') {
            message = 'This order is locked due to payment failure and cannot be modified.';
            icon = 'error';
        } else if (orderStatus === 'payment-failed') {
            message = 'Cannot update status for payment failed orders.';
            icon = 'error';
        } else if (paymentStatus === 'pending' || paymentStatus === 'failed') {
            message = `Cannot update status - Online payment is ${paymentStatus}. Payment must be completed first.`;
            icon = 'warning';
        } else {
            message = 'This order cannot be modified at this time.';
            icon = 'info';
        }
        
        Toast.fire({
            icon: icon,
            title: message,
            timer: 4000
        });
    }

    // ✅ Approve return - using Swal
    function confirmReturnApprove(orderId) {
        Swal.fire({
            title: 'Approve Return?',
            text: 'Are you sure you want to approve this return request?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes, Approve',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#10b981',
            cancelButtonColor: '#6b7280'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById(`returnApproveForm-${orderId}`).submit();
            }
        });
    }

    // ✅ Reject return - using Swal
    function confirmReturnReject(orderId) {
        Swal.fire({
            title: 'Reject Return?',
            text: 'Are you sure you want to reject this return request?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, Reject',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#ef4444',
            cancelButtonColor: '#6b7280'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById(`returnRejectForm-${orderId}`).submit();
            }
        });
    }
</script>

<%- include('./partials/footer') %>