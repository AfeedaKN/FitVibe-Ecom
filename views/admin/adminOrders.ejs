<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>FitVibe Admin - Order Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">
  <style>
    :root {
      --primary-color: #1a1a1a;
      --secondary-color: #ffd700;
      --accent-color: #e6c200;
      --text-light: #ffffff;
      --text-dark: #333333;
      --background-light: #f9f9f9;
      --card-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      --transition: all 0.3s ease;
    }

    body {
      font-family: 'Arial', sans-serif;
      line-height: 1.6;
      color: var(--text-dark);
      background-color: var(--background-light);
      margin-left: 280px;
    }

    .container {
      padding: 40px 20px;
      max-width: 1400px;
      margin: 0 auto;
    }

    h1 {
      font-size: 28px;
      margin-bottom: 20px;
      color: var(--text-dark);
      position: relative;
      display: inline-block;
    }

    h1::after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 3px;
      background: var(--secondary-color);
    }

    .search-filter-bar {
      display: flex;
      gap: 20px;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }

    .order-table {
      background: white;
      border-radius: 10px;
      box-shadow: var(--card-shadow);
      overflow-x: auto;
    }

    .order-table table {
      width: 100%;
      border-collapse: collapse;
    }

    .order-table th,
    .order-table td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    .order-table th {
      background: var(--primary-color);
      color: var(--text-light);
      cursor: pointer;
    }

    .order-table th:hover {
      background: var(--secondary-color);
      color: var(--primary-color);
    }

    .status-badge {
      display: inline-block;
      padding: 5px 10px;
      border-radius: 15px;
      font-size: 12px;
      color: var(--text-light);
    }

    .status-pending { background: #f39c12; }
    .status-processing { background: #3498db; }
    .status-shipped { background: #9b59b6; }
    .status-out-for-delivery { background: #8e44ad; }
    .status-delivered { background: #2ecc71; }
    .status-cancelled { background: #e74c3c; }
    .status-returned { background: #c0392b; }
    .status-return-pending { background: #e67e22; }

    .action-btn {
      padding: 8px 16px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: var(--transition);
      font-size: 14px;
      color: var(--text-light);
    }

    .view-btn { background: var(--primary-color); }
    .view-btn:hover { background: var(--secondary-color); color: var(--primary-color); }
    .status-btn { background: #3498db; }
    .status-btn:hover { background: #2980b9; }

    .pagination {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-top: 20px;
    }

    .pagination a, .pagination span {
      padding: 8px 12px;
      border: 1px solid #ddd;
      border-radius: 5px;
      text-decoration: none;
      color: var(--text-dark);
      transition: var(--transition);
    }

    .pagination a:hover {
      background: var(--secondary-color);
      color: var(--primary-color);
    }

    .pagination .active {
      background: var(--primary-color);
      color: var(--text-light);
      border-color: var(--primary-color);
    }

    .no-orders {
      text-align: center;
      padding: 40px;
      background: white;
      border-radius: 10px;
      box-shadow: var(--card-shadow);
    }

    .modal-content {
      border-radius: 10px;
    }

    .modal-header {
      background: var(--primary-color);
      color: var(--text-light);
    }

    .modal-footer .btn-primary {
      background: var(--secondary-color);
      border-color: var(--secondary-color);
      color: var(--primary-color);
    }

    .modal-footer .btn-primary:hover {
      background: var(--accent-color);
      border-color: var(--accent-color);
    }

    @media (max-width: 768px) {
      body { margin-left: 0; }
      .container { padding: 20px; }
      .search-filter-bar { flex-direction: column; }
    }
  </style>
</head>
<body>
   <%- include('./partials/sidebar', { page: 'orders' }) %>
  <div class="container">
    <h1>Order Management</h1>

    <% if (error_msg.length > 0) { %>
  <div class="alert alert-danger">
    <% error_msg.forEach(function(msg) { %>
      <p><%= msg %></p>
    <% }) %>
  </div>
<% } %>

<% if (success_msg.length > 0) { %>
  <div class="alert alert-success">
    <% success_msg.forEach(function(msg) { %>
      <p><%= msg %></p>
    <% }) %>
  </div>
<% } %>


    <div class="search-filter-bar">
      <form action="/admin/orders" method="GET" class="d-flex gap-2 flex-grow-1">
        <input type="text" name="search" class="form-control" placeholder="Search by Order ID, User Name, Email, or Status" value="<%= query.search || '' %>">
        <select name="status" class="form-select" style="width: 200px;">
          <option value="">All Statuses</option>
          <option value="pending" <%= query.status === 'pending' ? 'selected' : '' %>>Pending</option>
          <option value="processing" <%= query.status === 'processing' ? 'selected' : '' %>>Processing</option>
          <option value="shipped" <%= query.status === 'shipped' ? 'selected' : '' %>>Shipped</option>
          <option value="out for delivery" <%= query.status === 'out for delivery' ? 'selected' : '' %>>Out for Delivery</option>
          <option value="delivered" <%= query.status === 'delivered' ? 'selected' : '' %>>Delivered</option>
          <option value="cancelled" <%= query.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
          <option value="return pending" <%= query.status === 'return pending' ? 'selected' : '' %>>Return Pending</option>
          <option value="returned" <%= query.status === 'returned' ? 'selected' : '' %>>Returned</option>
        </select>
        <select name="sort" class="form-select" style="width: 200px;">
          <option value="-orderDate" <%= query.sort === '-orderDate' ? 'selected' : '' %>>Date (Newest)</option>
          <option value="orderDate" <%= query.sort === 'orderDate' ? 'selected' : '' %>>Date (Oldest)</option>
          <option value="finalAmount" <%= query.sort === 'finalAmount' ? 'selected' : '' %>>Amount (Low to High)</option>
          <option value="-finalAmount" <%= query.sort === '-finalAmount' ? 'selected' : '' %>>Amount (High to Low)</option>
          <option value="orderStatus" <%= query.sort === 'orderStatus' ? 'selected' : '' %>>Status (A-Z)</option>
        </select>
        <button type="submit" class="btn btn-primary">Apply</button>
        <a href="/admin/orders" class="btn btn-secondary">Clear</a>
      </form>
    </div>

    <% if (orders.length > 0) { %>
      <div class="order-table">
        <table>
          <thead>
            <tr>
              <th>Order ID</th>
              <th>Order Date</th>
              <th>User</th>
              <th>Status</th>
              <th>Total</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% orders.forEach(order => { %>
              <tr>
                <td><%= order.orderID %></td>
                <td><%= order.orderDate.toLocaleDateString() %></td>
                <td><%= order.user.name %> (<%= order.user.email %>)</td>
                <td>
<span class="status-badge status-<%= order.orderStatus.toLowerCase().replace(/\s+/g, '-') %>">
                    <%= order.orderStatus %>
                  </span>
                </td>
                <td>â‚¹<%= order.finalAmount.toFixed(2) %></td>
                <td>
                  <a href="/admin/order/<%= order._id %>" class="action-btn view-btn">View</a>
                  <% if (!['cancelled', 'returned'].includes(order.orderStatus)) { %>
                    <button class="action-btn status-btn" data-order-id="<%= order._id %>" data-bs-toggle="modal" data-bs-target="#updateStatusModal">Update Status</button>
                  <% } %>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <% if (totalPages > 1) { %>
        <div class="pagination">
          <% for(let i = 1; i <= totalPages; i++) { %>
            <a href="/admin/orders?page=<%= i %><%= query.search ? '&search=' + query.search : '' %><%= query.status ? '&status=' + query.status : '' %><%= query.sort ? '&sort=' + query.sort : '' %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
          <% } %>
        </div>
      <% } %>
    <% } else { %>
      <div class="no-orders">
        <p>No orders found.</p>
      </div>
    <% } %>
  </div>

  <div class="modal fade" id="updateStatusModal" tabindex="-1" aria-labelledby="updateStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="updateStatusModalLabel">Update Order Status</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form id="updateStatusForm" action="/admin/order/status" method="POST">
          <input type="hidden" name="orderId" id="statusOrderId">
          <div class="modal-body">
            <div class="mb-3">
              <label for="orderStatus" class="form-label">New Status</label>
              <select class="form-control" id="orderStatus" name="status" required>
                <option value="pending">Pending</option>
                <option value="processing">Processing</option>
                <option value="shipped">Shipped</option>
                <option value="out for delivery">Out for Delivery</option>
                <option value="delivered">Delivered</option>
                <option value="cancelled">Cancelled</option>
              </select>
            </div>
            <div class="mb-3" id="cancelReasonDiv" style="display: none;">
              <label for="cancelReason" class="form-label">Cancellation Reason (Optional)</label>
              <textarea class="form-control" id="cancelReason" name="reason" rows="4" maxlength="500"></textarea>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Update Status</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script>
    // Populate status modal
    document.querySelectorAll('.status-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        document.getElementById('statusOrderId').value = btn.dataset.orderId;
      });
    });

    // Toggle cancel reason field
    document.getElementById('orderStatus').addEventListener('change', (e) => {
      const cancelReasonDiv = document.getElementById('cancelReasonDiv');
      cancelReasonDiv.style.display = e.target.value === 'cancelled' ? 'block' : 'none';
    });

    // Handle status update
    document.getElementById('updateStatusForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target);
      try {
        const response = await fetch(e.target.action, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(Object.fromEntries(formData))
        });
        const result = await response.json();
        if (result.success) {
          window.location.reload();
        } else {
          alert(result.message || 'Failed to update status.');
        }
      } catch (error) {
        alert('Error updating status.');
      }
    });
  </script>
</body>
</html>