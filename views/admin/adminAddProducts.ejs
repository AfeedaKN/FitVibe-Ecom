<%- include('./partials/header', { pageTitle: 'Add Product' }) %>
<%- include('./partials/sidebar', { page: 'products' }) %>

<div class="main-content">
    <header class="top-header">
        <div class="header-content">
            <div class="header-left">
                <button class="sidebar-toggle" onclick="toggleSidebar()"><i class="fas fa-bars"></i></button>
                <div>
                    <h1 class="page-title">Add New Product</h1>
                    <div class="breadcrumbs">
                        <a href="/admin/dashboard">Dashboard</a>
                        <span class="breadcrumb-separator">/</span>
                        <a href="/admin/products">Products</a>
                        <span class="breadcrumb-separator">/</span>
                        <span>Add Product</span>
                    </div>
                </div>
            </div>
            <div class="header-right">
                <a href="/admin/products" class="btn btn-outline-modern"><i class="fas fa-arrow-left me-2"></i>Back</a>
                <div class="admin-profile">
                    <div class="admin-avatar">A</div>
                    <div class="admin-info">
                        <div class="admin-name">Admin</div>
                        <div class="admin-role">Administrator</div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="content-area">
        <% if (success_msg) { %>
            <div class="alert alert-success alert-dismissible fade show alert-modern alert-success-modern" role="alert">
                <i class="fas fa-check-circle me-2"></i><%= success_msg %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" style="filter: invert(1);"></button>
            </div>
        <% } %>
        <% if (error_msg) { %>
            <div class="alert alert-danger alert-dismissible fade show alert-modern alert-danger-modern" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i><%= error_msg %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" style="filter: invert(1);"></button>
            </div>
        <% } %>

        <form id="addProductForm" action="/admin/addproducts" method="POST" enctype="multipart/form-data" class="needs-validation" novalidate>
            <div class="row g-4">
                <!-- LEFT: Product Info -->
                <div class="col-lg-8">
                    <div class="card-modern mb-4 no-hover">
                        <div class="card-header-modern"><h5 class="card-title mb-0"><i class="fas fa-info-circle me-2"></i>Product Information</h5></div>
                        <div class="card-body-modern">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label for="name" class="form-label fw-medium">Product Name *</label>
                                    <input type="text" class="form-control form-control-modern" id="name" name="name" required>
                                    <div class="invalid-feedback">Please provide a product name.</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="categoryId" class="form-label fw-medium">Category *</label>
                                    <select class="form-select form-select-modern" id="categoryId" name="categoryId" required>
                                        <option value="">Select Category</option>
                                        <% categories.forEach(cat => { %>
                                            <option value="<%= cat._id %>"><%= cat.name %></option>
                                        <% }) %>
                                    </select>
                                    <div class="invalid-feedback">Please select a category.</div>
                                </div>
                            </div>

                            <div class="row g-3 mt-2">
                                <div class="col-12">
                                    <label for="description" class="form-label fw-medium">Description *</label>
                                    <textarea class="form-control form-control-modern" id="description" name="description" rows="4" required></textarea>
                                    <div class="invalid-feedback">Please provide a description.</div>
                                </div>
                            </div>

                            <div class="row g-3 mt-2">
                                <div class="col-md-4">
                                    <label for="brand" class="form-label fw-medium">Brand</label>
                                    <input type="text" class="form-control form-control-modern" id="brand" name="brand">
                                </div>
                                <div class="col-md-4">
                                    <label for="color" class="form-label fw-medium">Color *</label>
                                    <input type="text" class="form-control form-control-modern" id="color" name="color" required>
                                    <div class="invalid-feedback">Please provide a color.</div>
                                </div>
                                <div class="col-md-4">
                                    <label for="fabric" class="form-label fw-medium">Fabric</label>
                                    <input type="text" class="form-control form-control-modern" id="fabric" name="fabric">
                                </div>
                            </div>

                            <div class="row g-3 mt-2">
                                <div class="col-md-6">
                                    <label for="sku" class="form-label fw-medium">SKU</label>
                                    <input type="text" class="form-control form-control-modern" id="sku" name="sku">
                                </div>
                                <div class="col-md-6">
                                    <label for="offer" class="form-label fw-medium">Offer (%)</label>
                                    <input type="number" class="form-control form-control-modern" id="offer" name="offer" min="0" max="100" value="0">
                                </div>
                            </div>

                            <div class="row g-3 mt-2">
                                <div class="col-12">
                                    <label for="tags" class="form-label fw-medium">Tags (comma separated)</label>
                                    <input type="text" class="form-control form-control-modern" id="tags" name="tags" placeholder="casual, summer">
                                </div>
                            </div>

                            <div class="row g-3 mt-2">
                                <div class="col-12">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="isActive" name="isActive" checked>
                                        <label class="form-check-label fw-medium" for="isActive">Product is Active</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Variants -->
                    <div class="card-modern mb-4 no-hover">
                        <div class="card-header-modern"><h5 class="card-title mb-0"><i class="fas fa-layer-group me-2"></i>Product Variants</h5></div>
                        <div class="card-body-modern">
                            <div class="row g-3">
                                <% ['S','M','L','XL'].forEach(size => { %>
                                    <div class="col-md-6 col-lg-3">
                                        <div class="variant-card">
                                            <label class="form-label fw-medium text-center d-block">Size <%= size %></label>
                                            <div class="variant-inputs">
                                                <input type="number" class="form-control form-control-modern"
                                                       name="varientPrice[<%= size %>]" placeholder="Price (â‚¹)" min="0" step="0.01">
                                                <input type="number" class="form-control form-control-modern"
                                                       name="varientquatity[<%= size %>]" placeholder="Quantity" min="0">
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                            <small class="text-muted-modern mt-2"><i class="fas fa-info-circle me-1"></i>Enter price and quantity for each size. Leave empty for unavailable sizes.</small>
                        </div>
                    </div>
                </div>

                <!-- RIGHT: Images -->
                <div class="col-lg-4">
                    <div class="card-modern mb-4 no-hover">
                        <div class="card-header-modern"><h5 class="card-title mb-0"><i class="fas fa-upload me-2"></i>Upload Images (Exactly 3)</h5></div>
                        <div class="card-body-modern">
                            <% for(let i = 1; i <= 3; i++) { %>
                            <div class="mb-4">
                                <label class="form-label fw-medium">Image <%= i %> *</label>
                                <input type="file" class="form-control form-control-modern" name="productImages" id="input<%= i %>" accept="image/*" onchange="viewImage(event, <%= i %>)">
                                <img src="" alt="" id="imgView<%= i %>" class="mt-2 img-fluid rounded" style="max-height: 150px; display: none;">
                                <div class="crop-container position-relative mt-2" id="cropContainer<%= i %>" style="display:none; height:250px; background:#f8f9fa; border-radius:8px; overflow:hidden;">
                                    <canvas id="cropCanvas<%= i %>" style="max-width:100%;"></canvas>
                                    <div class="crop-box position-absolute border border-primary border-2" id="cropBox<%= i %>" style="cursor:move;">
                                        <div class="resize-handle position-absolute" style="width:12px;height:12px;background:#2b6cb0;right:-6px;bottom:-6px;cursor:nwse-resize;"></div>
                                    </div>
                                    <button type="button" class="btn btn-success btn-sm position-absolute bottom-0 start-50 translate-middle-x mb-2" style="z-index:10;" onclick="saveCrop(<%= i %>)">Save Crop</button>
                                </div>
                                <input type="hidden" name="croppedImage<%= i %>" id="croppedData<%= i %>" value="">
                            </div>
                            <% } %>
                            <div id="images-error" class="text-danger small mt-2"></div>
                        </div>
                    </div>

                    <div class="card-modern no-hover">
                        <div class="card-body-modern">
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary-modern" id="submitBtn">
                                    <i class="fas fa-save me-2"></i>Add Product
                                </button>
                                <a href="/admin/products" class="btn btn-outline-modern"><i class="fas fa-arrow-left me-2"></i>Back</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<style>
    .variant-card{background:var(--bg-tertiary);border:1px solid var(--border-light);border-radius:var(--radius-lg);padding:1rem;text-align:center;transition:all var(--transition-normal)}
    .variant-card:hover{background:var(--bg-secondary);box-shadow:var(--shadow-sm)}
    .variant-inputs{display:flex;flex-direction:column;gap:.5rem}
    .crop-container{border:1px solid var(--border-light);border-radius:var(--radius-lg);}
    .crop-box{border:2px dashed #2b6cb0 !important;}
    .invalid-feedback{color:red!important;font-size:.875rem;margin-top:.25rem}
    .was-validated .form-control:invalid,.form-control.is-invalid{border-color:red!important;box-shadow:0 0 0 .25rem rgba(255,0,0,.25)!important}
    .btn-loading{position:relative;color:transparent}
    .btn-loading::after{content:'';position:absolute;width:16px;height:16px;top:50%;left:50%;margin-left:-8px;margin-top:-8px;border:2px solid transparent;border-top-color:currentColor;border-radius:50%;animation:spin 1s linear infinite}
    @keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
</style>

<script>
    const cropData = {};
    let currentCropIndex = null;

    function viewImage(event, index) {
        const input = event.target;
        const file = input.files[0];
        if (!file) return;

        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
        if (!validTypes.includes(file.type)) {
            alert('Only JPG, PNG, WEBP allowed');
            input.value = '';
            return;
        }

        const reader = new FileReader();
        reader.onload = function(e) {
            const imgView = document.getElementById(`imgView${index}`);
            imgView.src = e.target.result;
            imgView.style.display = 'block';

            const container = document.getElementById(`cropContainer${index}`);
            container.style.display = 'block';

            setupCropper(index, e.target.result);
        };
        reader.readAsDataURL(file);
    }

    function setupCropper(index, src) {
        const canvas = document.getElementById(`cropCanvas${index}`);
        const ctx = canvas.getContext('2d');
        const cropBox = document.getElementById(`cropBox${index}`);
        const img = new Image();
        img.src = src;

        img.onload = function() {
            const maxW = 400, maxH = 250;
            const ratio = Math.min(maxW / img.width, maxH / img.height);
            canvas.width = img.width * ratio;
            canvas.height = img.height * ratio;
            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

            let w = Math.min(200, canvas.width * 0.7);
            let h = w;
            let x = (canvas.width - w) / 2;
            let y = (canvas.height - h) / 2;

            cropBox.style.width = w + 'px';
            cropBox.style.height = h + 'px';
            cropBox.style.left = x + 'px';
            cropBox.style.top = y + 'px';

            cropData[index] = { x, y, width: w, height: h };

            let isDragging = false, isResizing = false, startX, startY;

            const startDrag = (e) => {
                if (e.target.classList.contains('resize-handle')) {
                    isResizing = true;
                } else {
                    isDragging = true;
                }
                startX = e.clientX;
                startY = e.clientY;
                e.preventDefault();
            };

            const onMove = (e) => {
                if (!isDragging && !isResizing) return;
                const dx = e.clientX - startX;
                const dy = e.clientY - startY;

                if (isDragging) {
                    x = Math.max(0, Math.min(x + dx, canvas.width - w));
                    y = Math.max(0, Math.min(y + dy, canvas.height - h));
                    cropBox.style.left = x + 'px';
                    cropBox.style.top = y + 'px';
                } else if (isResizing) {
                    w = Math.max(50, Math.min(w + dx, canvas.width - x));
                    h = Math.max(50, Math.min(h + dy, canvas.height - y));
                    cropBox.style.width = w + 'px';
                    cropBox.style.height = h + 'px';
                }

                startX = e.clientX;
                startY = e.clientY;
                cropData[index] = { x, y, width: w, height: h };
            };

            const stopDrag = () => {
                isDragging = isResizing = false;
            };

            cropBox.addEventListener('mousedown', startDrag);
            document.addEventListener('mousemove', onMove);
            document.addEventListener('mouseup', stopDrag);

            // Cleanup on new image
            canvas.__cleanup = () => {
                cropBox.removeEventListener('mousedown', startDrag);
                document.removeEventListener('mousemove', onMove);
                document.removeEventListener('mouseup', stopDrag);
            };
        };
    }

    window.saveCrop = function(index) {
        const canvas = document.getElementById(`cropCanvas${index}`);
        const { x, y, width, height } = cropData[index];
        const input = document.getElementById(`input${index}`);
        const imgView = document.getElementById(`imgView${index}`);
        const hidden = document.getElementById(`croppedData${index}`);

        const tempCanvas = document.createElement('canvas');
        tempCanvas.width = 800;
        tempCanvas.height = 800;
        const ctx = tempCanvas.getContext('2d');
        const img = new Image();
        img.src = canvas.toDataURL();

        img.onload = () => {
            ctx.drawImage(img, x, y, width, height, 0, 0, 800, 800);
            tempCanvas.toBlob(blob => {
                const file = new File([blob], `cropped_${index}.jpg`, { type: 'image/jpeg' });
                const dt = new DataTransfer();
                dt.items.add(file);
                input.files = dt.files;

                imgView.src = URL.createObjectURL(file);
                hidden.value = tempCanvas.toDataURL('image/jpeg', 0.9);

                document.getElementById(`cropContainer${index}`).style.display = 'none';
                showToast('Image cropped & saved!', 'success');
            }, 'image/jpeg', 0.9);
        };
    };

    // Form Submit
    document.getElementById('addProductForm').addEventListener('submit', function(e) {
        const cropped = [];
        for(let i=1; i<=3; i++) {
            const input = document.getElementById(`input${i}`);
            const hidden = document.getElementById(`croppedData${i}`).value;
            if (!input.files[0] || !hidden) {
                e.preventDefault();
                document.getElementById('images-error').textContent = 'Please upload and crop all 3 images.';
                return;
            }
            cropped.push(hidden);
        }

        if (!this.checkValidity()) {
            e.preventDefault();
            this.classList.add('was-validated');
            return;
        }

        document.getElementById('submitBtn').classList.add('btn-loading');
        document.getElementById('submitBtn').disabled = true;
    });

    function showToast(msg, type = 'success') {
        if (typeof window.showToast === 'function') window.showToast(msg, type);
        else alert(msg);
    }
</script>

<%- include('./partials/footer') %>