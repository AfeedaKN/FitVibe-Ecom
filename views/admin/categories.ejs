<%- include('./partials/header', { pageTitle: 'Category Management' }) %>

<%- include('./partials/sidebar', { page: 'categories' }) %>

<div class="main-content">
    <!-- Top Header -->
    <header class="top-header">
        <div class="header-content">
            <div class="header-left">
                <button class="sidebar-toggle" onclick="toggleSidebar()">
                    <i class="fas fa-bars"></i>
                </button>
                <div>
                    <h1 class="page-title">Category Management</h1>
                    <div class="breadcrumbs">
                        <a href="/admin/dashboard">Dashboard</a>
                        <span class="breadcrumb-separator">/</span>
                        <span>Categories</span>
                    </div>
                </div>
            </div>
            <div class="header-right">
                <button onclick="showForm()" class="btn btn-primary-modern">
                    <i class="fas fa-plus me-2"></i>Add Category
                </button>
                <div class="admin-profile">
                    <div class="admin-avatar">
                        A
                    </div>
                    <div class="admin-info">
                        <div class="admin-name">Admin</div>
                        <div class="admin-role">Administrator</div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Content Area -->
    <div class="content-area">
        <!-- Search Bar -->
        <div class="card-modern mb-4 no-hover">
            <div class="card-body-modern">
                <form action="/admin/categories/" method="get" class="row g-3">
                    <div class="col-md-8">
                        <div class="position-relative">
                            <input type="text" 
                                   name="search" 
                                   class="form-control form-control-modern ps-5" 
                                   placeholder="Search categories..." 
                                   value="<%= search || '' %>">
                            <i class="fas fa-search position-absolute top-50 start-0 translate-middle-y ms-3 text-muted-modern"></i>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary-modern">
                                <i class="fas fa-search me-2"></i>Search
                            </button>
                            <a href="/admin/categories" class="btn btn-outline-modern">
                                <i class="fas fa-times me-2"></i>Clear
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Main Content Row -->
        <div class="row g-4">
            <!-- Categories Table -->
            <div class="col-12">
                <!-- Category Form (Hidden by default) -->
                <div class="card-modern no-hover mb-4" id="categoryForm" style="display: none;">
                    <div class="card-header-modern">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-plus me-2"></i>Create New Category
                        </h5>
                    </div>
                    <div class="card-body-modern">
                        <div class="row">
                            <div class="col-lg-6 mx-auto">
                                <form method="post" onsubmit="return handleFormSubmit(event)">
                                    <div class="mb-3">
                                        <label for="product_name" class="form-label fw-medium">Category Name</label>
                                        <input type="text" 
                                               name="name" 
                                               placeholder="Enter category name" 
                                               class="form-control form-control-modern" 
                                               id="product_name" />
                                        <div id="name-error" class="error-message"></div>
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label fw-medium">Description</label>
                                        <textarea placeholder="Enter category description" 
                                                  name="description" 
                                                  class="form-control form-control-modern" 
                                                  id="descriptionId" 
                                                  rows="4"></textarea>
                                        <div id="description-error" class="error-message"></div>
                                    </div>
                                    <div class="d-flex gap-2 justify-content-end">
                                        <button type="button" class="btn btn-outline-modern" onclick="hideForm()">
                                            <i class="fas fa-times me-2"></i>Cancel
                                        </button>
                                        <button class="btn btn-primary-modern" type="submit">
                                            <i class="fas fa-save me-2"></i>Create Category
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Categories Table -->
                <div class="table-modern">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Sl No.</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (cat && cat.length > 0) { %>
                                <% cat.forEach((category, index) => { %>
                                    <tr>
                                        <td>
                                            <span class="serial-number"><%= (currentPage - 1) * 5 + index + 1 %></span>
                                        </td>
                                        <td>
                                            <div class="category-name"><%= category.name %></div>
                                        </td>
                                        <td>
                                            <div class="category-description">
                                                <%= category.description || 'N/A' %>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="status-badge status-<%= category.isListed ? 'active' : 'inactive' %>">
                                                <i class="fas fa-circle"></i>
                                                <%= category.isListed ? 'Listed' : 'Unlisted' %>
                                            </span>
                                        </td>
                                        <td>
                                            <div class="action-buttons">
                                                <button class="btn btn-sm btn-outline-modern"
                                                        onclick="openEditModal('<%= encodeURIComponent(category._id) %>', '<%= encodeURIComponent(category.name) %>', '<%= encodeURIComponent(category.description || '') %>')"
                                                        data-bs-toggle="tooltip" 
                                                        title="Edit Category">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                
                                                <% if (category.isListed) { %>
                                                    <button class="btn btn-sm btn-warning-modern"
                                                            onclick="toggleCategory('<%= encodeURIComponent(category._id) %>', 'unlist')"
                                                            data-bs-toggle="tooltip" 
                                                            title="Unlist Category">
                                                        <i class="fas fa-eye-slash"></i>
                                                    </button>
                                                <% } else { %>
                                                    <button class="btn btn-sm btn-success-modern"
                                                            onclick="toggleCategory('<%= encodeURIComponent(category._id) %>', 'list')"
                                                            data-bs-toggle="tooltip" 
                                                            title="List Category">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                <% } %>
                                                
                                                <button class="btn btn-sm btn-danger-modern"
                                                        onclick="deleteCategory('<%= category._id %>')"
                                                        data-bs-toggle="tooltip" 
                                                        title="Delete Category">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="text-center py-4">
                                        <div class="empty-state">
                                            <i class="fas fa-tags text-muted-modern mb-3 empty-icon"></i>
                                            <h6 class="text-muted-modern mb-2">No Categories Found</h6>
                                            <p class="text-muted-modern mb-0">
                                                <% if (search) { %>
                                                    No categories match your search criteria.
                                                <% } else { %>
                                                    Start by creating your first category.
                                                <% } %>
                                            </p>
                                        </div>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <% if (totalPages > 1) { %>
                    <div class="d-flex justify-content-center mt-4">
                        <nav aria-label="Categories pagination">
                            <ul class="pagination pagination-modern">
                                <% if (currentPage > 1) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= search || '' %>">
                                            <i class="fas fa-chevron-left"></i>
                                        </a>
                                    </li>
                                <% } %>

                                <% for (let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>&search=<%= search || '' %>">
                                            <%= i %>
                                        </a>
                                    </li>
                                <% } %>

                                <% if (currentPage < totalPages) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= search || '' %>">
                                            <i class="fas fa-chevron-right"></i>
                                        </a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-modern">
            <div class="modal-header modal-header-modern">
                <h5 class="modal-title fw-semibold" id="editModalLabel">
                    <i class="fas fa-edit me-2"></i>Edit Category
                </h5>
                <button type="button" class="btn-close btn-close-modern" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCategoryForm" onsubmit="return validateEditForm(event)">
                <input type="hidden" id="editId" name="id">
                <div class="modal-body modal-body-modern">
                    <div class="mb-3">
                        <label for="editName" class="form-label fw-medium">Category Name</label>
                        <input type="text" 
                               id="editName" 
                               name="name" 
                               class="form-control form-control-modern" 
                               required>
                        <div id="edit-name-error" class="error-message"></div>
                    </div>
                    <div class="mb-3">
                        <label for="editDescription" class="form-label fw-medium">Description</label>
                        <textarea id="editDescription" 
                                  name="description" 
                                  class="form-control form-control-modern" 
                                  rows="4" 
                                  maxlength="500"></textarea>
                        <div id="edit-description-error" class="error-message"></div>
                    </div>
                </div>
                <div class="modal-footer modal-footer-modern">
                    <button type="button" class="btn btn-outline-modern" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <button type="submit" class="btn btn-primary-modern">
                        <i class="fas fa-save me-2"></i>Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    /* Category Management Specific Monochrome Styles */
    .serial-number {
        font-family: 'Courier New', monospace;
        font-weight: 600;
        color: var(--text-primary);
    }

    .category-name {
        font-weight: 500;
        color: var(--text-primary);
        font-size: 0.875rem;
    }

    .category-description {
        color: var(--text-secondary);
        font-size: 0.875rem;
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .action-buttons {
        display: flex;
        gap: 0.375rem;
    }

    .action-buttons .btn {
        padding: 0.375rem 0.5rem;
        border-radius: var(--radius-md);
        transition: all var(--transition-normal);
    }

    .action-buttons .btn:hover {
        transform: translateY(-1px);
        box-shadow: var(--shadow-sm);
    }

    .empty-state {
        padding: 2rem 1rem;
    }

    .empty-icon {
        font-size: 3rem;
    }

    .error-message {
        color: var(--color-grey-600);
        font-size: 0.75rem;
        margin-top: 0.25rem;
        display: none;
    }

    /* Modal Styles */
    .modal-modern {
        border: none;
        border-radius: var(--radius-xl);
        box-shadow: var(--shadow-xl);
        background: var(--bg-primary);
    }

    .modal-header-modern {
        background: var(--bg-tertiary);
        border-bottom: 1px solid var(--border-light);
        border-radius: var(--radius-xl) var(--radius-xl) 0 0;
        color: var(--text-primary);
    }

    .modal-body-modern {
        background: var(--bg-primary);
        color: var(--text-primary);
    }

    .modal-footer-modern {
        background: var(--bg-tertiary);
        border-top: 1px solid var(--border-light);
        border-radius: 0 0 var(--radius-xl) var(--radius-xl);
    }

    .btn-close-modern {
        filter: none;
        background: none;
        border: none;
        opacity: 0.6;
    }

    .btn-close-modern:hover {
        opacity: 1;
    }

    /* Form Styles */
    .form-label {
        color: var(--text-primary);
        font-size: 0.875rem;
    }

    /* Button Styles */
    .btn-warning-modern {
        background: var(--color-grey-600);
        color: var(--text-light);
        border: 1px solid var(--color-grey-600);
    }

    .btn-warning-modern:hover {
        background: var(--color-grey-700);
        border-color: var(--color-grey-700);
        color: var(--text-light);
    }

    .btn-success-modern {
        background: var(--color-grey-700);
        color: var(--text-light);
        border: 1px solid var(--color-grey-700);
    }

    .btn-success-modern:hover {
        background: var(--color-grey-800);
        border-color: var(--color-grey-800);
        color: var(--text-light);
    }

    .btn-danger-modern {
        background: var(--color-grey-500);
        color: var(--text-light);
        border: 1px solid var(--color-grey-500);
    }

    .btn-danger-modern:hover {
        background: var(--color-grey-600);
        border-color: var(--color-grey-600);
        color: var(--text-light);
    }

    /* Pagination Styles - Monochrome */
    .pagination-modern {
        --bs-pagination-padding-x: 0.75rem;
        --bs-pagination-padding-y: 0.5rem;
        --bs-pagination-font-size: 0.875rem;
        --bs-pagination-color: var(--text-secondary);
        --bs-pagination-bg: var(--bg-primary);
        --bs-pagination-border-width: 1px;
        --bs-pagination-border-color: var(--border-light);
        --bs-pagination-border-radius: var(--radius-lg);
        --bs-pagination-hover-color: var(--text-primary);
        --bs-pagination-hover-bg: var(--bg-tertiary);
        --bs-pagination-hover-border-color: var(--border-medium);
        --bs-pagination-focus-color: var(--text-primary);
        --bs-pagination-focus-bg: var(--bg-tertiary);
        --bs-pagination-focus-box-shadow: 0 0 0 0.25rem rgb(0 0 0 / 0.1);
        --bs-pagination-active-color: var(--text-light);
        --bs-pagination-active-bg: var(--bg-dark);
        --bs-pagination-active-border-color: var(--bg-dark);
        --bs-pagination-disabled-color: var(--text-muted);
        --bs-pagination-disabled-bg: var(--bg-primary);
        --bs-pagination-disabled-border-color: var(--border-light);
    }

    .pagination-modern .page-link {
        border-radius: var(--radius-md);
        margin: 0 0.125rem;
        transition: all var(--transition-normal);
        color: var(--text-secondary);
        background-color: var(--bg-primary);
        border-color: var(--border-light);
    }

    .pagination-modern .page-link:hover {
        color: var(--text-primary);
        background-color: var(--bg-tertiary);
        border-color: var(--border-medium);
    }

    .pagination-modern .page-item.active .page-link {
        color: var(--text-light);
        background-color: var(--bg-dark);
        border-color: var(--bg-dark);
        box-shadow: var(--shadow-sm);
    }

    .pagination-modern .page-item.disabled .page-link {
        color: var(--text-muted);
        background-color: var(--bg-primary);
        border-color: var(--border-light);
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .action-buttons {
            flex-direction: column;
            gap: 0.25rem;
        }

        .action-buttons .btn {
            padding: 0.25rem 0.375rem;
            font-size: 0.75rem;
        }

        .category-description {
            max-width: 150px;
        }
    }

    @media (max-width: 576px) {
        .table-modern {
            font-size: 0.8rem;
        }

        .category-description {
            max-width: 100px;
        }
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>

<script>
    function showForm() {
        document.getElementById('categoryForm').style.display = 'block';
        // Scroll to form
        document.getElementById('categoryForm').scrollIntoView({ behavior: 'smooth' });
    }

    function hideForm() {
        document.getElementById('categoryForm').style.display = 'none';
        // Clear form
        document.querySelector('input[name="name"]').value = '';
        document.getElementById('descriptionId').value = '';
        clearErrorMessages();
    }

    function handleFormSubmit(event) {
        event.preventDefault();
        if (!validateForm()) {
            return false;
        }
        const name = document.getElementsByName("name")[0].value;
        const description = document.getElementById("descriptionId").value;

        fetch('/admin/addCategory', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, description })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(err => {
                    throw new Error(err.error || err.message);
                });
            }
            return response.json();
        })
        .then(data => {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Category added successfully',
                background: '#ffffff',
                color: '#171717',
                confirmButtonColor: '#171717'
            }).then(() => {
                location.reload();
            });
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: "Error",
                text: error.message || "An error occurred while adding the category",
                background: '#ffffff',
                color: '#171717',
                confirmButtonColor: '#525252'
            });
        });
    }

    function validateForm() {
        clearErrorMessages();
        const name = document.querySelector('input[name="name"]').value.trim();
        const description = document.getElementById("descriptionId").value.trim();
        let isValid = true;

        if (name === "") {
            displayErrorMessage("name-error", "Please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
            isValid = false;
        }
        if (description === "") {
            displayErrorMessage("description-error", "Please enter a description");
            isValid = false;
        }
        return isValid;
    }

    function validateEditForm(event) {
        event.preventDefault();
        clearEditErrorMessages();
        const name = document.getElementById("editName").value.trim();
        const description = document.getElementById("editDescription").value.trim();
        let isValid = true;

        if (name === "") {
            displayEditErrorMessage("edit-name-error", "Please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayEditErrorMessage("edit-name-error", "Category name should contain only alphabetic characters");
            isValid = false;
        }
        if (description === "") {
            displayEditErrorMessage("edit-description-error", "Please enter a description");
            isValid = false;
        }

        if (isValid) {
            submitEditForm();
        }
        return false;
    }

    function submitEditForm() {
        const formData = new FormData(document.getElementById('editCategoryForm'));
        const data = Object.fromEntries(formData);

        fetch('/admin/editCategory', {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify(data)
        })
        .then(response => {
            return response.json();
        })
        .then(result => {
            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: result.message,
                    background: '#ffffff',
                    color: '#171717',
                    confirmButtonColor: '#171717'
                });
                closeEditModal();
                window.location.reload();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'Failed to update category',
                    background: '#ffffff',
                    color: '#171717',
                    confirmButtonColor: '#525252'
                });
            }
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: `An error occurred while updating the category: ${error.message}`,
                background: '#ffffff',
                color: '#171717',
                confirmButtonColor: '#525252'
            });
        });
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

    function displayEditErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearEditErrorMessages() {
        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

    function openEditModal(id, name, description) {
        const editId = document.getElementById('editId');
        const editName = document.getElementById('editName');
        const editDescription = document.getElementById('editDescription');
        const editModal = new bootstrap.Modal(document.getElementById('editModal'));

        if (!editId || !editName || !editDescription) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Modal elements not found',
                background: '#ffffff',
                color: '#171717',
                confirmButtonColor: '#525252'
            });
            return;
        }

        editId.value = decodeURIComponent(id);
        editName.value = decodeURIComponent(name);
        editDescription.value = decodeURIComponent(description || '');
        editModal.show();
    }

    function closeEditModal() {
        const editModal = bootstrap.Modal.getInstance(document.getElementById('editModal'));
        if (editModal) {
            editModal.hide();
        }
        document.getElementById('editCategoryForm').reset();
        clearEditErrorMessages();
    }

    async function toggleCategory(categoryId, action) {
        const confirmMessage = `Are you sure you want to ${action} this category?`;
        const result = await Swal.fire({
            title: confirmMessage,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#171717',
            cancelButtonColor: '#525252',
            confirmButtonText: 'Yes, proceed!',
            background: '#ffffff',
            color: '#171717'
        });

        if (!result.isConfirmed) {
            return;
        }

        try {
            const endpoint = action === 'unlist' ? '/admin/deleteCategory' : '/admin/restoreCategory';
            const response = await fetch(`${endpoint}?id=${encodeURIComponent(categoryId)}`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                credentials: 'include'
            });

            const result = await response.json();
            if (result.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: result.message,
                    background: '#ffffff',
                    color: '#171717',
                    confirmButtonColor: '#171717'
                });
                window.location.reload();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || `Failed to ${action} category`,
                    background: '#ffffff',
                    color: '#171717',
                    confirmButtonColor: '#525252'
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: `An error occurred while ${action}ing the category: ${error.message}`,
                background: '#ffffff',
                color: '#171717',
                confirmButtonColor: '#525252'
            });
        }
    }

    function deleteCategory(categoryId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#525252',
            cancelButtonColor: '#a3a3a3',
            confirmButtonText: 'Yes, delete it!',
            background: '#ffffff',
            color: '#171717'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/categoryDelete?id=${categoryId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: data.message,
                            background: '#ffffff',
                            color: '#171717',
                            confirmButtonColor: '#171717'
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: data.message || 'Failed to delete category',
                            background: '#ffffff',
                            color: '#171717',
                            confirmButtonColor: '#525252'
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: `An error occurred while deleting the category: ${error.message}`,
                        background: '#ffffff',
                        color: '#171717',
                        confirmButtonColor: '#525252'
                    });
                });
            }
        });
    }

    // Initialize tooltips
    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });
</script>

<%- include('./partials/footer') %>